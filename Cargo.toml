[package]
authors = ["Golem Factory <contact@golem.network>"]
description = "Open platform and marketplace for distributed computations"
edition = "2018"
homepage = "https://github.com/golemfactory/yagna/core/serv"
license = "GPL-3.0"
name = "yagna"
readme = "README.md"
repository = "https://github.com/golemfactory/yagna"
version = "0.16.0"

[features]
default = ['erc20-driver', 'gftp/bin']
dummy-driver = ['ya-dummy-driver']
erc20-driver = ['ya-erc20-driver']
framework-test = ['ya-exe-unit/system-test', 'ya-payment/framework-test', 'ya-identity/framework-test']
static-openssl = ["openssl/vendored", "openssl-probe"]
tos = []
# Temporary to make goth integration tests work
central-net = ['ya-net/central-net']
packet-trace-enable = [
  "ya-vpn/packet-trace-enable",
  "ya-file-logging/packet-trace-enable",
  "ya-net/packet-trace-enable",
  "ya-service-bus/packet-trace-enable",
]

[[bin]]
name = "yagna"
path = "core/serv/src/main.rs"

[dependencies]
gftp = {workspace = true, optional = true}
ya-activity = "0.4"
ya-client-model.workspace = true
ya-client.workspace = true
ya-compile-time-utils = "0.2"
ya-core-model.workspace = true
ya-dummy-driver = {version = "0.3", optional = true}
ya-erc20-driver = {version = "0.4", optional = true}
ya-fd-metrics = {path = "utils/fd-metrics"}
ya-file-logging = "0.1"
ya-gsb-api = "0.1"
ya-identity = "0.3"
ya-market = "0.4"
ya-metrics = "0.2"
ya-net = {version = "0.3", features = ["service"]}
ya-payment = "0.3"
ya-persistence = {version = "0.3", features = ["service"]}
ya-sb-proto = {workspace = true}
ya-sb-router = {workspace = true}
ya-service-api = "0.1"
ya-service-api-derive = "0.2"
ya-service-api-interfaces = "0.2"
ya-service-api-web = "0.2"
ya-service-bus = {workspace = true}
ya-sgx = "0.2"
ya-utils-futures.workspace = true
ya-utils-networking = "0.2"
ya-utils-path = "0.1"
ya-utils-process = {version = "0.2", features = ["lock"]}
ya-version = "0.2"
ya-vpn = "0.2"
# just to enable gftp build for cargo-deb
ya-exe-unit = {version = "0.4", optional = true, path = "exe-unit"}# just to enable conditionally running some tests
ya-provider = {version = "0.3", optional = true}# just to enable conditionally running some tests

actix-rt = "2.7"
actix-service = "2"
actix-web = "4"
anyhow = "1.0"
chrono = "0.4"
directories = "2.0.2"
dotenv = "0.15.0"
futures = "0.3"
lazy_static = "1.4"
libsqlite3-sys = {workspace = true}
log = "0.4"
metrics = "0.12"
num_cpus = "1"
openssl-probe = {version = "0.1", optional = true}
openssl.workspace = true
serde = "1.0"
serde_json = "1.0"
structopt = "0.3"
tokio = {version = "1", features = ["net"]}
tokio-stream = {version = "0.1.8", features = ["io-util"]}
tokio-util = {version = "0.7", features = ["codec"]}
url = "2.1.1"

[dev-dependencies]
erc20_processor = {workspace = true}
ya-exe-unit = {version = "0.4", path = "exe-unit"}
ya-test-framework = "0.1"

[package.metadata.deb]
assets = [
  [
    "target/release/yagna",
    "usr/bin/",
    "755",
  ],
  [
    "target/release/gftp",
    "usr/bin/",
    "755",
  ],
  [
    "README.md",
    "usr/share/doc/yagna/",
    "644",
  ],
  [
    "core/serv/README.md",
    "usr/share/doc/yagna/service.md",
    "644",
  ],
]
conflicts = "ya-provider"
depends = "libgcc1, libc6 (>= 2.23)"
extended-description = """The Next Golem Milestone.

An open platform and marketplace for distributed computations.
"""
features = ["static-openssl"]
maintainer-scripts = "debian/core"
name = "golem-requestor"

[package.metadata.deb.variants.provider]
assets = [
  [
    "target/release/yagna",
    "usr/bin/",
    "755",
  ],
  [
    "target/release/ya-provider",
    "usr/bin/",
    "755",
  ],
  [
    "target/release/gftp",
    "usr/bin/",
    "755",
  ],
  [
    "target/release/exe-unit",
    "usr/lib/yagna/plugins/",
    "755",
  ],
  [
    "target/release/golemsp",
    "usr/bin/",
    "755",
  ],
  [
    "README.md",
    "usr/share/doc/yagna/",
    "644",
  ],
  [
    "core/serv/README.md",
    "usr/share/doc/yagna/service.md",
    "644",
  ],
  [
    "agent/provider/readme.md",
    "usr/share/doc/yagna/run-provider.md",
    "644",
  ],
]
depends = "libgcc1, libc6 (>= 2.23)"
features = ["static-openssl"]
maintainer-scripts = "debian/provider"
name = "golem-provider"
replaces = "golem-requestor"

[workspace.lints.clippy]
arc_with_non_send_sync = "allow"
blocks_in_conditions = "allow"
get_first = "allow"
doc_lazy_continuation = "allow"

[workspace]
members = [
  "agent/provider",
  "core/activity",
  "core/gftp",
  "core/gsb-api",
  "core/identity",
  "core/market",
  "core/market/resolver",
  "core/model",
  "core/net",
  "core/payment",
  "core/payment-driver/base",
  "core/payment-driver/dummy",
  "core/payment-driver/erc20",
  "core/persistence",
  "core/serv-api",
  "core/serv-api/derive",
  "core/serv-api/interfaces",
  "core/serv-api/web",
  "core/sgx",
  "core/version",
  "core/vpn",
  "exe-unit/components/counters",
  "exe-unit/components/gsb-http-proxy",
  "exe-unit",
  "exe-unit/runtime-api",
  "exe-unit/tokio-process-ns",
  "exe-unit/components/transfer",
  "golem_cli",
  "utils/actix_utils",
  "utils/agreement-utils",
  "utils/cli",
  "utils/compile-time-utils",
  "utils/file-logging",
  "utils/futures",
  "utils/manifest-utils",
  "utils/manifest-utils/test-utils",
  "utils/networking",
  "utils/path",
  "utils/process",
  "utils/std-utils",
  "utils/diesel-utils",
  "utils/fd-metrics",
  "core/metrics",
  "test-utils/test-framework",
  "test-utils/test-framework/framework-macro",
  "test-utils/test-framework/framework-basic",
  "test-utils/test-framework/framework-mocks",
]

[workspace.dependencies]
# this entry is needed to make sqlx version >=0.5.9 work with diesel 1.4.*
# diesel 1.4.* supports up to 0.23.0, but sqlx 0.5.9 requires 0.22.0
# sqlx 0.5.10 need 0.23.2, so 0.5.9 is last version possible
derive_more = "0.99.11"
erc20_payment_lib = {git = "https://github.com/golemfactory/erc20_payment_lib", rev = "4200567b931af64f4fb1f6b756dd6d051576b64f"}
erc20_processor = {git = "https://github.com/golemfactory/erc20_payment_lib", rev = "4200567b931af64f4fb1f6b756dd6d051576b64f"}
#erc20_payment_lib = { path = "../../payments/erc20_payment_lib/crates/erc20_payment_lib" }
#erc20_processor = { path = "../../payments/erc20_payment_lib" }
#erc20_payment_lib = { version = "0.4.7" }
#erc20_processor = { version = "0.4.7" }
gftp = {version = "0.4.1", path = "core/gftp"}
hex = "0.4.3"
libsqlite3-sys = {version = "0.26.0", features = ["bundled"]}
openssl = "0.10"
rand = "0.8.5"
regex = "1.10.4"
strum = {version = "0.24", features = ["derive"]}
trust-dns-resolver = "0.22"
url = "2.3.1"

ya-agreement-utils = {version = "0.6", path = "utils/agreement-utils"}
ya-core-model = {version = "0.10", path = "core/model"}
ya-relay-client = {git = "https://github.com/golemfactory/ya-relay.git", rev = "e199ee1cfdb22837f9d95f4202378e182d3cb489"}
ya-relay-stack = {git = "https://github.com/golemfactory/ya-relay.git", rev = "c92a75b0cf062fcc9dbb3ea2a034d913e5fad8e5"}
ya-utils-futures = {path = "utils/futures"}

mime = "0.3.17"
parking_lot = "0.12.3"
ya-sb-proto = {version = "0.6.2"}
ya-sb-router = {version = "0.6.4"}
ya-sb-util = {version = "0.5.1"}
ya-service-bus = {version = "0.7.3", features = ['tls']}
# true version is given in patches section
ya-client = "0.9"
# true version is given in patches section
ya-client-model = "0.7"

[patch.crates-io]
## SERVICES
ya-activity = {path = "core/activity"}
ya-dummy-driver = {path = "core/payment-driver/dummy"}
ya-erc20-driver = {path = "core/payment-driver/erc20"}
ya-gsb-api = {path = "core/gsb-api"}
ya-identity = {path = "core/identity"}
ya-market = {path = "core/market"}
ya-market-resolver = {path = "core/market/resolver"}
ya-net = {path = "core/net"}
ya-payment = {path = "core/payment"}
ya-payment-driver = {path = "core/payment-driver/base"}
ya-sgx = {path = "core/sgx"}
ya-version = {path = "core/version"}
ya-vpn = {path = "core/vpn"}

## CORE UTILS
ya-core-model = {path = "core/model"}
ya-persistence = {path = "core/persistence"}
ya-service-api = {path = "core/serv-api"}
ya-service-api-derive = {path = "core/serv-api/derive"}
ya-service-api-interfaces = {path = "core/serv-api/interfaces"}
ya-service-api-web = {path = "core/serv-api/web"}

## CLIENT
ya-client = {git = "https://github.com/golemfactory/ya-client.git", rev = "dacad31b5bbd039b8ffc97adb70696655d0872ad"}
#ya-client = { path = "../ya-client" }
ya-client-model = {git = "https://github.com/golemfactory/ya-client.git", rev = "dacad31b5bbd039b8ffc97adb70696655d0872ad"}
#ya-client-model = { path = "../ya-client/model" }
golem-certificate = {git = "https://github.com/golemfactory/golem-certificate.git", rev = "952fdbd47adc57e46b7370935111e046271ef415"}

## RELAY and networking stack

#ya-relay-stack = { path = "../ya-relay/crates/stack" }
#ya-relay-client = { path = "../ya-relay/client" }
#ya-relay-core = { path = "../ya-relay/crates/core" }
#ya-relay-proto = { path = "../ya-relay/crates/proto" }

## OTHERS
gftp = {path = "core/gftp"}
tokio-process-ns = {path = "exe-unit/tokio-process-ns"}
ya-agreement-utils = {path = "utils/agreement-utils"}
ya-compile-time-utils = {path = "utils/compile-time-utils"}
ya-counters = {path = "exe-unit/components/counters"}
ya-diesel-utils = {path = "utils/diesel-utils"}
ya-exe-unit = {path = "exe-unit"}
ya-file-logging = {path = "utils/file-logging"}
ya-gsb-http-proxy = {path = "exe-unit/components/gsb-http-proxy"}
ya-manifest-utils = {path = "utils/manifest-utils"}
ya-metrics = {path = "core/metrics"}
ya-provider = {path = "agent/provider"}
ya-std-utils = {path = "utils/std-utils"}
ya-transfer = {path = "exe-unit/components/transfer"}
ya-utils-actix = {path = "utils/actix_utils"}
ya-utils-cli = {path = "utils/cli"}
ya-utils-networking = {path = "utils/networking"}
ya-utils-path = {path = "utils/path"}
ya-utils-process = {path = "utils/process"}

## TEST UTILS
ya-framework-basic = {path = "test-utils/test-framework/framework-basic"}
ya-framework-macro = {path = "test-utils/test-framework/framework-macro"}
ya-framework-mocks = {path = "test-utils/test-framework/framework-mocks"}
ya-manifest-test-utils = {path = "utils/manifest-utils/test-utils"}
ya-test-framework = {path = "test-utils/test-framework"}

ethereum-tx-sign = {git = "https://github.com/golemfactory/ethereum-tx-sign.git", rev = "1164c74187a9e2947faeaea7dde104c3cdec4195"}
graphene-sgx = {git = " https://github.com/golemfactory/graphene-rust.git", rev = "dbd993ebad7f9190410ea390a589348479af6407"}

diesel = {git = "https://github.com/golemfactory/yagna-diesel-patch.git", rev = "a512c66d520a9066dd9a4d1416f9109019b39563"}

# Speed up builds on macOS (will be default in next rust version probably)
# https://jakedeichert.com/blog/reducing-rust-incremental-compilation-times-on-macos-by-70-percent/
#
# TODO: reenable split-debuginfo.
# Commented out split-debuginfo makes Windows builds fail due to "`-Csplit-debuginfo=unpacked` is unstable on this platform."
# This should not be the case (cargo is meant to verify that this option is supported), but it is since version 1.65, I think.
# [profile.dev]
# split-debuginfo = "unpacked"

[lints]
workspace = true
