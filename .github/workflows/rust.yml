name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - feature/*

jobs:
  build:
    name: Build
    env:
      RUSTFLAGS: "-D warnings -C opt-level=z -C target-cpu=x86-64 -C debuginfo=1"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target1-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --bins

      - name: Copy Binaries Unix
        if: runner.os != 'Windows'
        run: |
          mkdir build
          cp target/debug/{yagna,ya-provider,ya-requestor,ya-exe-dummy,wasmtime-exeunit} build
          strip -x build/*
      - name: Copy Binaries Windows
        if: runner.os == 'Windows'
        run: |
          mkdir build
          copy target\debug\yagna.exe build 
          copy target\debug\ya-provider.exe build 
          copy target\debug\ya-requestor.exe build 
          copy target\debug\ya-exe-dummy.exe build
          copy target\debug\wasmtime-exeunit.exe build


      - name: Upload binaries
        uses: actions/upload-artifact@v1
        with:
          name: Yagna ${{ runner.os }}
          path: build

#    - name: Clippy
#      uses: actions-rs/clippy-check@v1
#      with:
#        token: ${{ secrets.GITHUB_TOKEN }}
#        args: --all-features
