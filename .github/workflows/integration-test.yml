name: Goth integration tests (hybrid-net)

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Profile (unused right now)'
        required: true
        default: 'debug'
  push:
    branches:
      - master
      - release/*
      - '**/all-tests'
      - '**/integration-tests'


jobs:
  test_check:
    name: Check test results
    runs-on: ubuntu-latest
    steps:
      - name: Wait for build to succeed ( ubuntu )
        uses: tomchv/wait-my-workflow@v1.1.0
        id: wait-for-build-ubu
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Build binaries (x86-64)"
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          intervalSeconds: 30
          timeoutSeconds: 3600

      - name: Fail if build was not a success ( ubuntu )
        run: echo job status= ${{ steps.wait-for-build-ubu.outputs.conclusion }} && ${{ fromJSON('["false", "true"]')[steps.wait-for-build-ubu.outputs.conclusion == 'success'] }}

  integration-test-groups:
    name: Integration Tests (hybrid-net) group
    runs-on: [goth2, ubuntu-22.04]
    needs: test_check
    strategy:
      matrix:
        group: [1, 2]
    defaults:
      run:
        working-directory: "./goth_tests"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Configure Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Configure Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.6.1
          working-directory: "./goth_tests"

      - name: Install dependencies
        run: |
          poetry install --no-root

      - name: Disconnect Docker containers from default network
        continue-on-error: true
        # related to this issue: https://github.com/moby/moby/issues/23302
        run: |
          docker network inspect docker_default
          sudo apt-get install -y jq
          docker network inspect docker_default | jq ".[0].Containers | map(.Name)[]" | tee /dev/stderr | xargs --max-args 1 -- docker network disconnect -f docker_default

      - name: Remove Docker containers
        continue-on-error: true
        run: docker rm -f $(docker ps -a -q)

      - name: Restart Docker daemon
        # related to this issue: https://github.com/moby/moby/issues/23302
        run: sudo systemctl restart docker

      - name: Log in to GitHub Docker repository
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{github.actor}} --password-stdin

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: binaries-x86-64.yml
          commit: ${{github.event.pull_request.head.sha || github.sha}}
          workflow_conclusion: success
          name: "Yagna Linux"
          path: /tmp/yagna-build

      - name: Run test suite
        env:
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run poe goth-tests --splits 2 --group ${{ matrix.group }} --config-override docker-compose.build-environment.binary-path=/tmp/yagna-build

      - name: Upload test logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: goth-logs
          path: /tmp/goth-tests

      # Only relevant for self-hosted runners
      - name: Remove test logs
        if: always()
        run: rm -rf /tmp/goth-tests

      # Only relevant for self-hosted runners
      - name: Remove Poetry virtual env
        if: always()
        # Python version below should agree with the version set up by this job.
        # In the future we'll be able to use the `--all` flag here to remove envs for
        # all Python versions (https://github.com/python-poetry/poetry/issues/3208).
        run: poetry env remove --all

  integration-test:
    name: Integration Tests (hybrid-net)
    runs-on: ubuntu-latest
    needs: [integration-test-groups]
    steps:
      - name: Check status
        if: needs.integration-test-groups.result != 'success'
        run: exit 1
